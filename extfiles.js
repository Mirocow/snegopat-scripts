$engine JScript
$uname extfiles
$dname Внешние файлы
$addin global
$addin stdcommands

/* Скрипт для открытия внешних файлов для Снегопата
 * Автор		: Пушин Владимир, vladnet@gmail.com
 * Дата создания: 24.08.2011
 * Описание		: Добавляет окно из которого можно открывать внешние файлы
 */
var мВерсияСкрипта = 1.1

// Восстановим настройки
var pflExtFilesPath = "ExtFiles/Path"			// Зададим путь в профайле
var pflExtFilesPathBase = "ExtFiles/PathBase"	// Зададим путь в профайле

profileRoot.createValue(pflExtFilesPath, false, pflSnegopat)
profileRoot.createValue(pflExtFilesPathBase, false, pflBase)

var мМассивКаталоговОбщий = profileRoot.getValue(pflExtFilesPath)
var мМассивКаталоговБазы = profileRoot.getValue(pflExtFilesPathBase)

global.connectGlobals(SelfScript)

try{
	мМассивКаталоговОбщий = ValueFromStringInternal(мМассивКаталоговОбщий)
}
catch(e){
	мМассивКаталоговОбщий = v8New("Массив")
}
try{
	мМассивКаталоговБазы = ValueFromStringInternal(мМассивКаталоговБазы)
}
catch(e){
	мМассивКаталоговБазы = v8New("Массив")
}

мФормаСкрипта=null
мФормаНастройки=null

// Макрос для вызова окна
function macrosОткрытьОкноВнешнихФайлов()
{
	var pathToForm = SelfScript.fullPath.replace(/js$/, 'ssf')
	if(!мФормаСкрипта){
		мФормаСкрипта = loadScriptForm(pathToForm, SelfScript.self) // Обработку событий формы привяжем к самому скрипту
		мФормаСкрипта.Заголовок="Внешние файлы "+мВерсияСкрипта
	}
	мФормаСкрипта.Открыть()
}

function КпШапкаНастройки(Элемент)
{
	var pathToForm=SelfScript.fullPath.replace(/.js$/, 'param.ssf')
	мФормаНастройки=loadScriptForm(pathToForm, SelfScript.self) // Обработку событий формы привяжем к самому скрипту
	мФормаНастройки.ОткрытьМодально()
}

function мЗаписатьНастройки()
{
	мМассивКаталоговОбщий=мФормаНастройки.КаталогиОбщие.ВыгрузитьКолонку("ИмяКаталога")
	мМассивКаталоговБазы=мФормаНастройки.КаталогиБазы.ВыгрузитьКолонку("ИмяКаталога")
	
	profileRoot.setValue(pflExtFilesPath, ValueToStringInternal(мМассивКаталоговОбщий))
	profileRoot.setValue(pflExtFilesPathBase, ValueToStringInternal(мМассивКаталоговБазы))
	
	мОбновитьФайлы()
}

function мЗагрузитьНастройку(пМассивКаталогов, пТаблицаКаталогов)
{
	for (var лИнд=0; лИнд<пМассивКаталогов.Количество(); лИнд++)
	{
		лСтрокаТз=пТаблицаКаталогов.Добавить()
		лСтрокаТз.ИмяКаталога=пМассивКаталогов.Получить(лИнд)
	}
}

function НастройкиПриОткрытии()
{
	мЗагрузитьНастройку(мМассивКаталоговОбщий, мФормаНастройки.КаталогиОбщие);
	мЗагрузитьНастройку(мМассивКаталоговБазы, мФормаНастройки.КаталогиБазы);
}

function КпШапкаЗаписатьИЗакрыть(Кнопка)
{
	мФормаНастройки.Закрыть()
	мЗаписатьНастройки()
}

function КпШапкаЗаписать(Кнопка)
{
	мЗаписатьНастройки()
}

function мВыбратьКаталог()
{
	ДиалогОткрытияФайла=v8New("ДиалогВыбораФайла", РежимДиалогаВыбораФайла.ВыборКаталога)
	ДиалогОткрытияФайла.ПолноеИмяФайла = ""
	ДиалогОткрытияФайла.Заголовок = "Выберите каталог"
	if(ДиалогОткрытияФайла.Выбрать()==false) return ""
	return ДиалогОткрытияФайла.Каталог
}

function КаталогиОбщиеИмяКаталогаНачалоВыбора(Элемент, СтандартнаяОбработка)
{
	лКаталог=мВыбратьКаталог()
	if(лКаталог=="") return
	Элемент.val.Значение=лКаталог
}

function КаталогиБазыИмяКаталогаНачалоВыбора(Элемент, СтандартнаяОбработка)
{
	лКаталог=мВыбратьКаталог()
	if(лКаталог=="") return
	Элемент.val.Значение=лКаталог
}

function мДобавитьФайлы(пПуть, пУзел)
{
	var лФайлы=FindFiles(пПуть, '*.*', false)
	for (var лИнд=0; лИнд<лФайлы.Количество(); лИнд++)
	{
		лФайл=лФайлы.Получить(лИнд)
		лСтрокаДереваФайлов=пУзел.Строки.Добавить()
		лСтрокаДереваФайлов.ЭтоКаталог=лФайл.ЭтоКаталог()
		лСтрокаДереваФайлов.ИмяФайла=лФайл.ПолноеИмя
		if(лСтрокаДереваФайлов.ЭтоКаталог == true)
		{
			лСтрокаДереваФайлов.Имя=лФайл.ИмяБезРасширения
			if(ValueIsFilled(лФайл.Расширение)) лСтрокаДереваФайлов.Имя+=лФайл.Расширение
			мДобавитьФайлы(лФайл.ПолноеИмя, лСтрокаДереваФайлов)
		}
		else
		{
			лСтрокаДереваФайлов.Имя=лФайл.ИмяБезРасширения
			лСтрокаДереваФайлов.Тип=лФайл.Расширение.substr(1)
		}
	}
}

function ДобавитьКаталоги(пМассивКаталогов)
{
	for (var лИнд=0; лИнд<пМассивКаталогов.Количество(); лИнд++)
	{
		var лКаталог=пМассивКаталогов.Получить(лИнд);
		лСтрокаДереваФайлов=мФормаСкрипта.ДеревоФайлов.Строки.Добавить()
		лСтрокаДереваФайлов.Имя=лКаталог
		
		мДобавитьФайлы(лКаталог, лСтрокаДереваФайлов)
		лСтрокаДереваФайлов.Строки.Сортировать("ЭтоКаталог Убыв, Имя", true);
	}
	мФормаСкрипта.ДеревоФайлов.Строки.Сортировать("ЭтоКаталог Убыв, Имя", true);
}

function мОбновитьФайлы()
{
	мФормаСкрипта.ДеревоФайлов.Строки.Очистить()
	
	ДобавитьКаталоги(мМассивКаталоговОбщий);
	ДобавитьКаталоги(мМассивКаталоговБазы);
}

function КпШапкаОбновить(Элемент)
{
	мОбновитьФайлы()
}

function ПриОткрытии()
{
	мОбновитьФайлы()
}

function КпШапкаЗакрыть(Элемент)
{
	мФормаСкрипта.Закрыть()
}

function openfile(ИмяФайлаПолное)
{
	// Подготовим наше значение для MRU - списка
	var pathToFile = ИмяФайлаПолное
	var docKind = '00000000-0000-0000-0000-000000000000'
	var mruItem = ЗначениеИзСтрокиВнутр('{"#",36973550-6bbb-11d5-bf72-0050bae2bc79,\n' +
	'{1,\n' +
	'{"file://' + pathToFile + '",0},' + docKind + '}\n' +
	'}')

	// Получим текущий список MRU из настроек
	var mru = profileRoot.getValue("App/MRUFileList")
	// Если там уже есть наше значение, удалим его
	var hasInMru = mru.НайтиПоЗначению(mruItem)
	if(hasInMru)
	   mru.Удалить(hasInMru)
	// Если список полон, удалим последний элемент
	if(mru.Количество() == 8)
	   mru.Удалить(7)
	// Вставим значение для нашего файла в начало списка
	mru.Вставить(0, mruItem)
	// Сохраним MRU-список обратно в настройки
	profileRoot.setValue("App/MRUFileList", mru)
	// И зашлем команду
	var cmd = addins.byUniqueName("stdcommands").object
	cmd.Frame.RecentFile.getState()
	cmd.Frame.RecentFile.send(0)
}

function ДеревоФайловПередНачаломИзменения(пЭлемент, пОтказ)
{
	пОтказ.val = true
	лТекСтрока=пЭлемент.val.ТекущаяСтрока
	if(лТекСтрока.ЭтоКаталог) return
	openfile(лТекСтрока.ИмяФайла)
}

function ДеревоФайловПриВыводеСтроки(пЭлемент, пОформлениеСтроки, пДанныеСтроки)
{
	лЯчейкаИмя=пОформлениеСтроки.val.Ячейки.Имя
	лЯчейкаИмя.ОтображатьКартинку=true
	if(ValueIsFilled(пДанныеСтроки.val.Родитель)==false)
		лЯчейкаИмя.Картинка=БиблиотекаКартинок.СоздатьГруппу
	else if(пДанныеСтроки.val.ЭтоКаталог==true)
		лЯчейкаИмя.Картинка=БиблиотекаКартинок.ОткрытьФайл
	else
		лЯчейкаИмя.Картинка=БиблиотекаКартинок.Форма
}
