$engine JScript
$uname extfiles
$dname Внешние файлы
$addin global
$addin stdcommands
$addin stdlib

/* Скрипт для открытия внешних файлов для Снегопата
 * Автор		: Пушин Владимир, vladnet@gmail.com
 * Дата создания: 24.08.2011
 * Описание		: Добавляет окно из которого можно открывать внешние файлы
 */
var мВерсияСкрипта = 1.35

/* Версия 1.35
 * 1. Добавлена возможность обновлять не все каталоги, а только текущий
 * 2. Косметические изменения форм
 * 3. Добавлены горячие кнопки для кнопок обновления каталогов
 * 4. Теперь при обновлении каталога позиция курсора сохраняется
 */

// Зададим путь в профайле
var pflExtFilesOpenOnStart	= "ExtFiles/OpenOnStart"
var pflExtShowExtInName		= "ExtFiles/ShowExtInName"
var pflExtFilesPath			= "ExtFiles/Path"
var pflExtFilesPathBase		= "ExtFiles/PathBase"

// Восстановим настройки
profileRoot.createValue(pflExtFilesOpenOnStart, false, pflSnegopat)
profileRoot.createValue(pflExtShowExtInName, true, pflSnegopat)
profileRoot.createValue(pflExtFilesPath, false, pflSnegopat)
profileRoot.createValue(pflExtFilesPathBase, false, pflBase)

var мОткрыватьПриСтарте = profileRoot.getValue(pflExtFilesOpenOnStart)
var мОтображатьРасширениеФайлаВПредставлении = profileRoot.getValue(pflExtShowExtInName)
var мТзКаталогиОбщие = profileRoot.getValue(pflExtFilesPath)
var мТзКаталогиБазы = profileRoot.getValue(pflExtFilesPathBase)

global.connectGlobals(SelfScript)

function ТзКаталоговИнициализировать(пТзКаталоги)
{
	try{
		пТзКаталоги = ValueFromStringInternal(пТзКаталоги)
	}
	catch(e){
		пТзКаталоги = v8New("ТаблицаЗначений")
	}
	try{ /*тут проверяем не старые ли настройки, раньше хранились в массиве, конвертируем, в будущем удалить*/
		var лТест=пТзКаталоги.ВГраница()
		лТзКаталоги = v8New("ТаблицаЗначений")
		лТзКаталоги.Колонки.Добавить("ИмяКаталога");
		лТзКаталоги.Колонки.Добавить("Развернуть");
		
		for (var лИнд=0; лИнд<пТзКаталоги.Количество(); лИнд++)
		{
			лСтрокаТз=лТзКаталоги.Добавить()
			лСтрокаТз.ИмяКаталога=пТзКаталоги.Получить(лИнд)
			лСтрокаТз.Развернуть=true
		}
		return лТзКаталоги
	}
	catch(e){
	}
	return пТзКаталоги
}

мТзКаталогиОбщие = ТзКаталоговИнициализировать(мТзКаталогиОбщие)
мТзКаталогиБазы = ТзКаталоговИнициализировать(мТзКаталогиБазы)

мФормаСкрипта=null
мФормаНастройки=null

if(мОткрыватьПриСтарте==true)
	macrosОткрытьОкноВнешнихФайлов()

// Макрос для вызова окна
function macrosОткрытьОкноВнешнихФайлов()
{
	var pathToForm = SelfScript.fullPath.replace(/js$/, 'ssf')
	if(!мФормаСкрипта){
		мФормаСкрипта = loadScriptForm(pathToForm, SelfScript.self) // Обработку событий формы привяжем к самому скрипту
		мФормаСкрипта.Заголовок="Внешние файлы" //+мВерсияСкрипта
	}
	мФормаСкрипта.Открыть()
}

/* Возвращает название макроса по умолчанию - вызывается, когда пользователь 
дважды щелкает мышью по названию скрипта в окне Снегопата. */
function getDefaultMacros() {
    return 'ОткрытьОкноВнешнихФайлов';
}

function КпШапкаНастройки(Элемент)
{
	var pathToForm=SelfScript.fullPath.replace(/.js$/, 'param.ssf')
	мФормаНастройки=loadScriptForm(pathToForm, SelfScript.self) // Обработку событий формы привяжем к самому скрипту
	мФормаНастройки.ЭлементыФормы.НадписьВерсия.Заголовок="Версия скрипта:"+мВерсияСкрипта
	мФормаНастройки.ОткрытьМодально()
}

function мЗаписатьНастройки()
{
	мТзКаталогиОбщие=мФормаНастройки.КаталогиОбщие
	мТзКаталогиБазы=мФормаНастройки.КаталогиБазы
	мОткрыватьПриСтарте=мФормаНастройки.ОткрыватьФормуПриЗагрузке
	
	profileRoot.setValue(pflExtFilesOpenOnStart, мОткрыватьПриСтарте)
	profileRoot.setValue(pflExtShowExtInName, мОтображатьРасширениеФайлаВПредставлении)
	profileRoot.setValue(pflExtFilesOpenOnStart, мОткрыватьПриСтарте)
	profileRoot.setValue(pflExtFilesPath, ValueToStringInternal(мТзКаталогиОбщие))
	profileRoot.setValue(pflExtFilesPathBase, ValueToStringInternal(мТзКаталогиБазы))
	
	мОбновитьФайлы()
}

function мЗагрузитьНастройку(пТзКаталоги, пТаблицаКаталогов)
{
	for (var лИнд=0; лИнд<пТзКаталоги.Количество(); лИнд++)
	{
		лСтрокаТз=пТаблицаКаталогов.Добавить()
		лСтрокаТз.ИмяКаталога=пТзКаталоги.Получить(лИнд).ИмяКаталога
		лСтрокаТз.Развернуть=пТзКаталоги.Получить(лИнд).Развернуть
	}
}

function НастройкиПриОткрытии()
{
	мФормаНастройки.ОткрыватьФормуПриЗагрузке=мОткрыватьПриСтарте
	мФормаНастройки.ОтображатьРасширениеФайлаВПредставлении=мОтображатьРасширениеФайлаВПредставлении
	мЗагрузитьНастройку(мТзКаталогиОбщие, мФормаНастройки.КаталогиОбщие);
	мЗагрузитьНастройку(мТзКаталогиБазы, мФормаНастройки.КаталогиБазы);
}

function КпШапкаЗаписатьИЗакрыть(Кнопка)
{
	мЗаписатьНастройки()
	мФормаНастройки.Закрыть()
}

function КпШапкаЗаписать(Кнопка)
{
	мЗаписатьНастройки()
}

function мВыбратьКаталог()
{
	ДиалогОткрытияФайла=v8New("ДиалогВыбораФайла", РежимДиалогаВыбораФайла.ВыборКаталога)
	ДиалогОткрытияФайла.ПолноеИмяФайла = ""
	ДиалогОткрытияФайла.Заголовок = "Выберите каталог"
	if(ДиалогОткрытияФайла.Выбрать()==false) return ""
	return ДиалогОткрытияФайла.Каталог
}

function КаталогиОбщиеИмяКаталогаНачалоВыбора(Элемент, СтандартнаяОбработка)
{
	лКаталог=мВыбратьКаталог()
	if(лКаталог=="") return
	Элемент.val.Значение=лКаталог
}

function КаталогиБазыИмяКаталогаНачалоВыбора(Элемент, СтандартнаяОбработка)
{
	лКаталог=мВыбратьКаталог()
	if(лКаталог=="") return
	Элемент.val.Значение=лКаталог
}

function мДобавитьФайлы(пПуть, пУзел)
{
	var лФайлы=FindFiles(пПуть, '*.*', false)
	for (var лИнд=0; лИнд<лФайлы.Количество(); лИнд++)
	{
		лФайл=лФайлы.Получить(лИнд)
		
		if((лФайл.ЭтоКаталог() == false) && (мФормаСкрипта.Фильтр != ''))
			if(лФайл.ИмяБезРасширения.toLowerCase().search(мФормаСкрипта.Фильтр.toLowerCase()) == -1) continue
		
		лСтрокаДереваФайлов=пУзел.Строки.Добавить()
		лСтрокаДереваФайлов.ЭтоКаталог=лФайл.ЭтоКаталог()
		лСтрокаДереваФайлов.ИмяФайла=лФайл.ПолноеИмя
		лСтрокаДереваФайлов.ДатаИзменения=лФайл.ПолучитьВремяИзменения()
		
		if(мОтображатьРасширениеФайлаВПредставлении == true)
			лСтрокаДереваФайлов.Имя=лФайл.Имя
		else
			лСтрокаДереваФайлов.Имя=лФайл.ИмяБезРасширения
		
		if(лСтрокаДереваФайлов.ЭтоКаталог == true)
		{
			if(ValueIsFilled(лФайл.Расширение)) лСтрокаДереваФайлов.Имя+=лФайл.Расширение
			мДобавитьФайлы(лФайл.ПолноеИмя, лСтрокаДереваФайлов)
		}
		else
			лСтрокаДереваФайлов.Тип=лФайл.Расширение.substr(1)
	}
}

function ДобавитьКаталоги(пТзКаталоги)
{
	for (var лИнд=0; лИнд<пТзКаталоги.Количество(); лИнд++)
	{
		var лКаталог=пТзКаталоги.Получить(лИнд).ИмяКаталога;
		лСтрокаДереваФайлов=мФормаСкрипта.ДеревоФайлов.Строки.Добавить()
		лСтрокаДереваФайлов.Имя=лКаталог
		лСтрокаДереваФайлов.ИмяФайла=лКаталог
		лСтрокаДереваФайлов.Развернуть=пТзКаталоги.Получить(лИнд).Развернуть
		
		мДобавитьФайлы(лКаталог, лСтрокаДереваФайлов)
		лСтрокаДереваФайлов.Строки.Сортировать("ЭтоКаталог Убыв, Имя", true)
	}
	мФормаСкрипта.ДеревоФайлов.Строки.Сортировать("ЭтоКаталог Убыв, Имя", true)
}

function мОбновитьФайлы()
{
	лТекСтрока=мФормаСкрипта.ЭлементыФормы.ДеревоФайлов.ТекущаяСтрока
	
	// Запомним текущую строку
	лИмяФайлаТекСтроки=""
	if(лТекСтрока!=undefined) лИмяФайлаТекСтроки=лТекСтрока.ИмяФайла
	
	мФормаСкрипта.ДеревоФайлов.Строки.Очистить()
	
	ДобавитьКаталоги(мТзКаталогиОбщие)
	ДобавитьКаталоги(мТзКаталогиБазы)
	for (var лИнд=0; лИнд<мФормаСкрипта.ДеревоФайлов.Строки.Количество(); лИнд++)
	{
		if(мФормаСкрипта.ДеревоФайлов.Строки.Получить(лИнд).Развернуть == false) continue
		var Str1=мФормаСкрипта.ДеревоФайлов.Строки.Получить(лИнд)
		мФормаСкрипта.ЭлементыФормы.ДеревоФайлов.Развернуть(Str1, мФормаСкрипта.Фильтр != '');
	}
	
	// Восстановим текущую строку
	if(лИмяФайлаТекСтроки != ""){
		лСтрокаНайденная=мФормаСкрипта.ДеревоФайлов.Строки.Найти(лИмяФайлаТекСтроки, "ИмяФайла", true)
		if(лСтрокаНайденная != undefined)
			мФормаСкрипта.ЭлементыФормы.ДеревоФайлов.ТекущаяСтрока=лСтрокаНайденная
	}
}

function мОбновитьФайлыТекущейВетки()
{
	лТекСтрока=мФормаСкрипта.ЭлементыФормы.ДеревоФайлов.ТекущаяСтрока
	if(лТекСтрока==undefined) return
	
	// Запомним текущую строку
	лИмяФайлаТекСтроки=лТекСтрока.ИмяФайла
	
	while(лТекСтрока.Родитель != undefined) лТекСтрока=лТекСтрока.Родитель
	лТекСтрока.Строки.Очистить()
	мДобавитьФайлы(лТекСтрока.Имя, лТекСтрока)
	лТекСтрока.Строки.Сортировать("ЭтоКаталог Убыв, Имя", true)
	
	// Восстановим текущую строку
	лСтрокаНайденная=мФормаСкрипта.ДеревоФайлов.Строки.Найти(лИмяФайлаТекСтроки, "ИмяФайла", true)
	if(лСтрокаНайденная != undefined)
		мФормаСкрипта.ЭлементыФормы.ДеревоФайлов.ТекущаяСтрока=лСтрокаНайденная
}

function КпШапкаОбновить(Элемент)
{
	мОбновитьФайлы()
}

function КпШапкаОбновитьТекущуюВетку(Элемент)
{
	мОбновитьФайлыТекущейВетки()
}

function ФильтрПриИзменении(Элемент)
{
	мОбновитьФайлы()
}

function ПриОткрытии()
{
	мОбновитьФайлы()
}

function КпШапкаЗакрыть(Элемент)
{
	мФормаСкрипта.Закрыть()
}

function мАктивноДеревоВнешнихФайлов()
{
	if(мФормаСкрипта==null) return false
	if(мФормаСкрипта.ВводДоступен()!=true) return false
	return мФормаСкрипта.ТекущийЭлемент==мФормаСкрипта.ЭлементыФормы.ДеревоФайлов
}

function macrosСвернутьДеревоВнешнихФайлов()
{
	if(мАктивноДеревоВнешнихФайлов()==false) return false
	
	if(мФормаСкрипта.ЭлементыФормы.ДеревоФайлов.Развернут(мФормаСкрипта.ЭлементыФормы.ДеревоФайлов.ТекущаяСтрока)==false)
	{
		if(мФормаСкрипта.ЭлементыФормы.ДеревоФайлов.ТекущаяСтрока.Родитель != undefined)
			мФормаСкрипта.ЭлементыФормы.ДеревоФайлов.ТекущаяСтрока=мФормаСкрипта.ЭлементыФормы.ДеревоФайлов.ТекущаяСтрока.Родитель
	}
	else
		мФормаСкрипта.ЭлементыФормы.ДеревоФайлов.Свернуть(мФормаСкрипта.ЭлементыФормы.ДеревоФайлов.ТекущаяСтрока)
}

function macrosРазвернутьДеревоВнешнихФайлов()
{
	if(мАктивноДеревоВнешнихФайлов()==false) return false
	мФормаСкрипта.ЭлементыФормы.ДеревоФайлов.Развернуть(мФормаСкрипта.ЭлементыФормы.ДеревоФайлов.ТекущаяСтрока)
}

function КпШапкаРазвернуть(Элемент)
{
	macrosРазвернутьДеревоВнешнихФайлов();
}

function КпШапкаСправка(Кнопка)
{
	RunApp('http://snegopat.ru/scripts/wiki?name=extfiles.js');
}

function КпШапкаСвернуть(Элемент)
{
	macrosСвернутьДеревоВнешнихФайлов()
}

function ДеревоФайловПередНачаломИзменения(пЭлемент, пОтказ)
{
	пОтказ.val = true
	лТекСтрока=пЭлемент.val.ТекущаяСтрока
	if(лТекСтрока.ЭтоКаталог) return
	stdlib.openFileIn1C(лТекСтрока.ИмяФайла)
}

function ДеревоФайловПриВыводеСтроки(пЭлемент, пОформлениеСтроки, пДанныеСтроки)
{
	лЯчейкаИмя=пОформлениеСтроки.val.Ячейки.Имя
	лЯчейкаИмя.ОтображатьКартинку=true
	if(ValueIsFilled(пДанныеСтроки.val.Родитель)==false)
		лЯчейкаИмя.Картинка=БиблиотекаКартинок.СоздатьГруппу
	else if(пДанныеСтроки.val.ЭтоКаталог==true)
		лЯчейкаИмя.Картинка=БиблиотекаКартинок.ОткрытьФайл
	else
		лЯчейкаИмя.Картинка=БиблиотекаКартинок.Форма
}
